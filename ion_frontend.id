use os;
use ion;
use json;
use fsutils;
use ArgumentParser from argparse;

func main(args) {
    print('Ion ({})'.format(ion.VERSION));
    print('Visit http://github.com/IodineLang/Ion for support');
    print('See the LICENSE file for legal information. (MIT License)');
    print('');

    verb = args[0]; # First argument, should be a verb by default

    parser = ArgumentParser ();

    parser.add ("verb");
    parser.add ("package");

    result = parser.parse (args);
    
    given (result ["verb"]) {
        when "list-installed" {
            items = ion.DataManager().getAll();
            foreach (item, info in items) {
                print ('{} {}'.format(item, info['version']));
                foreach (dep in info['dependencies']) {
                    print ('|- {} {}'.format(dep, info['dependencies'][dep]));
                }
            }

        }   
        when "install" {
            pkgs = ion.Installer (result ["package"]).install ()

        }
        when "install-deps" {
            ionFile = json.parse (fsutils.read ("./ionfile.json"));
          
            pkgs = {};

            foreach(dep, ver in ionFile['dependencies']) {
                res = ion.Installer (dep).install (ver);
                foreach (pkg in res) {
                    pkgs[pkg] = res[pkg];
                }
            }

            print('');
            print('Installation complete. Installed:');
            foreach (pkg in pkgs) {
                print('{} {}'.format (pkg, pkgs[pkg]));
            }
        }
        when "uninstall" {
            pkgs = ion.Uninstaller (result ["package"]).uninstall ();
            print ('Removal complete.');
        }
        when "init" {
            print ('Creating src directory');
            os.mkdir ('./src');
            print ('Creating ionfile.json');
            ion.IonFileManager ().create ();
            print ('Installing espresso test library');
            testLib = 'espresso';
            pkgs = ion.Installer (testLib).install ();
            ion.IonFileManager ().addDep (testLib, pkgs[testLib]);
            print ('Done!');
        }
    }
}
